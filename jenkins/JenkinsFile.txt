pipeline {
    agent {
		docker {
			image 'python:3.11.0a4-buster'
		}
	}
	triggers {
        githubPush()
    }
	options {
		skipDefaultCheckout(true)
        timeout(time: 60, unit: 'MINUTES')
    }
    stages {
		stage('Fetch') {
			steps {
				checkout scm
			}
		}
        stage('Build') {
            steps {
				withEnv(["HOME=${env.WORKSPACE}"]) {
					dir("jenkins") {
						sh 'python -m pip install --upgrade pip --user'
						sh 'python -m pip install -r requirements.txt'
					}
						sh 'python manage.py makemigrations'
						sh 'python manage.py migrate'	
				}
            }
        }
		stage('Tests') {
            steps {
					withEnv(["HOME=${env.WORKSPACE}"]) {
						sh "python -m coverage run manage.py test"
					}
				}
			}
			post{
				coverage report -m
			}
        }
		
}